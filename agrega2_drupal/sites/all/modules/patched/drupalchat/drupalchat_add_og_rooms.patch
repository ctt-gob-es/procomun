diff --git a/sites/all/modules/contrib/drupalchat/drupalchat.module b/sites/all/modules/contrib/drupalchat/drupalchat.module
index 3e63f1f..a52ce56 100644
--- a/sites/all/modules/contrib/drupalchat/drupalchat.module
+++ b/sites/all/modules/contrib/drupalchat/drupalchat.module
@@ -26,42 +26,17 @@ define('DRUPALCHAT_EXTERNAL_A_PORT', '443');
 
 function drupalchat_verify_access() {
   global $user;
-  // Match path if necessary.
-  $page_match = FALSE;
-  if (variable_get('drupalchat_path_pages', NULL)) {
-    // Convert path to lowercase. This allows comparison of the same path
-    // with different case. Ex: /Page, /page, /PAGE.
-    $pages = drupal_strtolower(variable_get('drupalchat_path_pages', NULL));
-    if (variable_get('drupalchat_path_visibility', BLOCK_VISIBILITY_NOTLISTED) < BLOCK_VISIBILITY_PHP) {
-      // Convert the Drupal path to lowercase
-      $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
-      // Compare the lowercase internal and lowercase path alias (if any).
-      $page_match = drupal_match_path($path, $pages);
-      if ($path != $_GET['q']) {
-        $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
-      }
-      // When $block->visibility has a value of 0 (BLOCK_VISIBILITY_NOTLISTED),
-      // the block is displayed on all pages except those listed in $block->pages.
-      // When set to 1 (BLOCK_VISIBILITY_LISTED), it is displayed only on those
-      // pages listed in $block->pages.
-      $page_match = !(variable_get('drupalchat_path_visibility', BLOCK_VISIBILITY_NOTLISTED) xor $page_match);
-    }
-    elseif (module_exists('php')) {
-      $page_match = php_eval(variable_get('drupalchat_path_pages', NULL));
+  // Check if the page is a community.
+  $node = menu_get_object();
+  if (isset($node->type) && og_is_member('node', $node->nid, 'user')) {
+    if ($node->type == 'social_network') {
+      return TRUE;
     }
     else {
-      $page_match = FALSE;
+      return FALSE;
     }
   }
-  else {
-    $page_match = TRUE;
-  }
-  $final = FALSE;
-  $final = ((((variable_get('drupalchat_rel', DRUPALCHAT_REL_AUTH) == DRUPALCHAT_REL_AUTH) && ($user->uid==0)) || ($user->uid>0)) && $page_match && user_access('access drupalchat'));
-  if(variable_get('drupalchat_polling_method', DRUPALCHAT_AJAX) != DRUPALCHAT_COMMERCIAL) {
-    $final = $final && (_drupalchat_get_sid() != -1);
-  }
-  return $final;
+  return FALSE;
 }
 
 function _drupalchat_get_sid($create = TRUE) {
@@ -266,6 +241,13 @@ function drupalchat_menu() {
     	'access arguments' => array('administer drupalchat'),	
     	'file' => 'drupalchat.admin.inc',
     );*/
+  $items['drupalchat/log_messages'] = array(
+    'title' => 'Chat Messages',
+    'type' => MENU_NORMAL_ITEM,
+    'page callback' => 'agrega2_drupalchat_get_messages',
+    'access arguments' => array('access drupalchat'),
+  );
+
   $items['drupalchat/poll'] = array(
 		'page callback' => 'drupalchat_poll',
 		'access arguments' => array('access drupalchat'),
@@ -504,6 +486,7 @@ function drupalchat_init() {
       'current_timestamp' => time(),
       'polling_method' => $polling_method,
       'pollUrl' => url('drupalchat/poll', array('absolute' => TRUE)),
+      'logMessagesUrl' => url('drupalchat/log_messages', array('absolute' => TRUE)),
       'sendUrl' => url('drupalchat/send', array('absolute' => TRUE)),
       'statusUrl' => url('drupalchat/status', array('absolute' => TRUE)),
       'status' => $status,
@@ -746,7 +729,7 @@ function drupalchat_status() {
  */
 function drupalchat_poll() {
   global $user;
-
+  $chatroom = 'room_' . $_SESSION['chatroom_drupal'];
 
   $initial_time = time();
   $message_count = 0;
@@ -798,27 +781,27 @@ function drupalchat_poll() {
       $buddylist_online = _drupalchat_buddylist_online($buddylist);
       //$message_count = db_query('SELECT COUNT(*) FROM {drupalchat_msg} m INNER JOIN {users} u ON m.uid1 = u.uid WHERE m.uid2 = :m.uid2 AND m.timestamp > :m.timestamp', array(':m.uid2' => $user->uid, ':m.timestamp' => $last_timestamp))->fetchField();
       if($user->uid > 0) {
-	    $message_count = db_query(' SELECT COUNT(*)
+	      $message_count = db_query(' SELECT COUNT(*)
                                     FROM {drupalchat_msg} m
-                                    WHERE (m.uid2 IN (:uid2,\'c-0\') OR m.uid1 = :uid2)
-                                    AND m.timestamp > :timestamp', array(':uid2' => $user->uid, ':timestamp' => $last_timestamp))->fetchField();
+                                    WHERE (m.uid2 IN (:uid2,:chatroom) OR m.uid1 = :uid2)
+                                    AND m.timestamp > :timestamp', array(':uid2' => $user->uid, ':timestamp' => $last_timestamp, ':chatroom' => $chatroom))->fetchField();
       }
-	  else {
-	    $message_count = db_query(' SELECT COUNT(*)
+	    else {
+	      $message_count = db_query(' SELECT COUNT(*)
                                     FROM {drupalchat_msg} m
-                                    WHERE (m.uid2 IN (:uid2,\'c-0\') OR m.uid1 = :uid2)
-                                    AND m.timestamp > :timestamp', array(':uid2' => '0-'._drupalchat_get_sid(), ':timestamp' => $last_timestamp))->fetchField();
-	  }
-	  _drupalchat_touch_user($user->uid);
+                                    WHERE (m.uid2 IN (:uid2,:chatroom) OR m.uid1 = :uid2)
+                                    AND m.timestamp > :timestamp', array(':uid2' => '0-'._drupalchat_get_sid(), ':timestamp' => $last_timestamp, ':chatroom' => $chatroom))->fetchField();
+	    }
+	    _drupalchat_touch_user($user->uid);
       module_invoke_all('drupalchat_longpoll'); // Long poll hook
     } while (((time() - $initial_time) < (ini_get('max_execution_time') - 5)) && ($message_count == 0) && (_drupalchat_buddylist_diff($buddylist_online_old, $buddylist_online)));
   }
   if (($message_count > 0) || ($polling_method == DRUPALCHAT_AJAX)) {
     if($user->uid > 0) {
-      $messages = db_query('SELECT m.message_id, m.uid1, m.uid2, m.message, m.timestamp FROM {drupalchat_msg} m WHERE (m.uid2 IN (:uid2,\'c-0\') OR m.uid1 = :uid2) AND m.timestamp > :timestamp ORDER BY m.timestamp ASC', array(':uid2' => $user->uid, ':timestamp' => $last_timestamp));
+      $messages = db_query('SELECT m.message_id, m.uid1, m.uid2, m.message, m.timestamp FROM {drupalchat_msg} m WHERE (m.uid2 IN (:uid2,:chatroom) OR m.uid1 = :uid2) AND m.timestamp > :timestamp ORDER BY m.timestamp ASC', array(':uid2' => $user->uid, ':timestamp' => $last_timestamp, ':chatroom' => $chatroom));
     }
 	else {
-	  $messages = db_query('SELECT m.message_id, m.uid1, m.uid2, m.message, m.timestamp FROM {drupalchat_msg} m WHERE (m.uid2 IN (:uid2,\'c-0\') OR m.uid1 = :uid2) AND m.timestamp > :timestamp ORDER BY m.timestamp ASC', array(':uid2' => '0-'._drupalchat_get_sid(), ':timestamp' => $last_timestamp));
+	  $messages = db_query('SELECT m.message_id, m.uid1, m.uid2, m.message, m.timestamp FROM {drupalchat_msg} m WHERE (m.uid2 IN (:uid2,:chatroom) OR m.uid1 = :uid2) AND m.timestamp > :timestamp ORDER BY m.timestamp ASC', array(':uid2' => '0-'._drupalchat_get_sid(), ':timestamp' => $last_timestamp, ':chatroom' => $chatroom));
 	}
     //while ($message = db_fetch_object($messages)) {
     // Drupal 7
@@ -935,12 +918,18 @@ function _drupalchat_buddylist_online($buddylist) {
   global $user, $base_url;
 
   $users = array();
-  if(variable_get('drupalchat_enable_chatroom', 1) == 1) {
-    $users['c-0'] = array('name' => t('Public Chatroom'), 'status' => '1');
-	if(variable_get('drupalchat_user_picture', 1) == 1) {
-	  $users['c-0']['p'] = $base_url . '/' . drupal_get_path('module', 'drupalchat') . '/themes/' . variable_get('drupalchat_theme', 'light') . '/images/default_room.png';
-	}
+  if ($node = menu_get_object()) {
+    $network = db_query('SELECT title FROM {node} WHERE nid = :nid', array(':nid' => $node->nid))->fetchField();
+    $_SESSION['chatroom_drupal'] = $node->nid;
+    $users['room_' . $node->nid] = array('name' => t($network), 'status' => '1');
+    $users['room_' . $node->nid]['p'] = $base_url . '/' . drupal_get_path('module', 'drupalchat') . '/themes/' . variable_get('drupalchat_theme', 'light') . '/images/default_room.png';
   }
+  else {
+    $network = db_query('SELECT title FROM {node} WHERE nid = :nid', array(':nid' => $_SESSION['chatroom_drupal']))->fetchField();
+    $users['room_' . $_SESSION['chatroom_drupal']] = array('name' => t($network), 'status' => '1');
+    $users['room_' . $_SESSION['chatroom_drupal']]['p'] = $base_url . '/' . drupal_get_path('module', 'drupalchat') . '/themes/' . variable_get('drupalchat_theme', 'light') . '/images/default_room.png';
+  }
+
   if (variable_get('drupalchat_rel', DRUPALCHAT_REL_AUTH) > DRUPALCHAT_REL_AUTH) {
     // Return empty on an empty buddylist
     if (empty($buddylist)) {
@@ -1499,3 +1488,42 @@ function _drupalchat_get_groups($uid) {
   
   return $groups;
 }
+
+
+/**
+ * Request for log messages, user and timestamp. to populate the room when creating the box.
+ *
+ * @return json with user, date and messages.
+ */
+function agrega2_drupalchat_get_messages() {
+
+ $messages = db_query('SELECT message,uid1,timestamp FROM {drupalchat_msg} WHERE uid2 = :uid2 AND timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH)', array(':uid2' => 'room_' . $_SESSION['chatroom_drupal']));
+  $i = 0;
+  $chat_users = array();
+  foreach($messages as $message) {
+
+    // MESSAGE
+    $json['messages'][$i]['message'] = $message->message;
+    // Avoid to request each time for the same user. We need a fresh info each time so cannot add to the cache this info.
+    if (!isset($chat_users[$message->uid1])) {
+      $chat_user = $chat_users[$message->uid1] = db_query('SELECT name FROM {users} WHERE uid = :uid1', array(':uid1' => $message->uid1))->fetchField();
+    }
+    else {
+      $chat_user = $chat_users[$message->uid1];
+    }
+
+    // USER
+    $json['messages'][$i]['user'] = $chat_user;
+
+    // DATE
+    if ($message->timestamp > strtotime('today midnight')) {
+      $date = date('H:i', $message->timestamp);
+    }
+    else {
+      $date = date('d/m/Y H:i', $message->timestamp);
+    }
+    $json['messages'][$i]['date'] = $date;
+    $i++;
+  }
+  drupal_json_output($json);
+}
diff --git a/sites/all/modules/contrib/drupalchat/js/drupalchat.js b/sites/all/modules/contrib/drupalchat/js/drupalchat.js
index a47a535..9019c8f 100644
--- a/sites/all/modules/contrib/drupalchat/js/drupalchat.js
+++ b/sites/all/modules/contrib/drupalchat/js/drupalchat.js
@@ -469,7 +469,7 @@ function drupalchatMain() {
 
       jQuery(" <li />" ).attr("id","chatbox_"+chatboxtitle)
       .addClass("chatbox")
-      .html('<a href="#" class="chatboxhead"><span class="subpanel_title_text">'+chatboxname+'</span></a><div class="subpanel"><div class="subpanel_title"><span class="'+chatboxtitle+'" title="Close">x</span><span title = "Minimize" class="min">_</span><div class="status-1"></div>'+chatboxname+'</div><div class="chatboxcontent"></div><div class="drupalchat_userOffline">'+chatboxname+' is currently offline.</div><div class="chatboxinput"><textarea class="chatboxtextarea" onkeydown="return Drupal.drupalchat.checkChatBoxInputKey(event,this,\''+chatboxtitle+'\');"></textarea></div></div>')
+      .html('<a href="#" class="chatboxhead"><span class="subpanel_title_text">'+chatboxname+'</span></a><div class="subpanel"><div class="subpanel_title"><span class="'+chatboxtitle+'" title="Close">x</span><span title = "Minimize" class="min">_</span><div class=""></div>'+chatboxname+'</div><div class="chatboxcontent"></div><div class="drupalchat_userOffline">'+chatboxname+' is currently offline.</div><div class="chatboxinput"><textarea class="chatboxtextarea" onkeydown="return Drupal.drupalchat.checkChatBoxInputKey(event,this,\''+chatboxtitle+'\');"></textarea></div></div>')
       .prependTo(jQuery( "#mainpanel" ));
 
       if (chatboxblink == 1) {
@@ -488,6 +488,16 @@ function drupalchatMain() {
               jQuery("#chatbox_"+chatboxtitle+" .chatboxtextarea").focus();
           }
       });
+
+      // MESSAGE LOGS.
+      jQuery.getJSON(Drupal.settings.drupalchat.logMessagesUrl, function(data) {
+          jQuery.each(data.messages, function (key, val){
+            jQuery("#chatbox_"+chatboxtitle+" .chatboxcontent").append('<p>'+val.user+'</p>');
+            jQuery("#chatbox_"+chatboxtitle+" .chatboxcontent").append('<p>'+val.date+'</p>');
+            jQuery("#chatbox_"+chatboxtitle+" .chatboxcontent").append('<p>'+val.message+'</p>');
+          });
+      });
+
       jQuery("#chatbox_"+chatboxtitle).show();
   }
 
@@ -543,15 +553,14 @@ function drupalchatMain() {
   			  drupalselfmessage = true;
   			}
   			//Add div if required.
-  			if(value.uid2=="c-0") {
+            /*if(value.uid2=="room_63") {
   			  drupalchatroom = true;
-  			}
-              else {
-  			  drupalchatroom = false;
-              }			
+            }*/
+            // ALWAYS CHATROOM for the moment.
+            drupalchatroom = true;
   			chatboxtitle = (drupalchatroom || drupalselfmessage)?value.uid2:value.uid1;
   			if (jQuery("#chatbox_"+chatboxtitle).length <= 0) {
-  				createChatBox(chatboxtitle, drupalchatroom?"Public Chatroom":value.name, 1);
+              createChatBox(chatboxtitle, drupalchatroom?value.uid2:value.name, 1);
   			}
   			else if (jQuery("#chatbox_"+chatboxtitle+" .subpanel").is(':hidden')) {
   				if (jQuery("#chatbox_"+chatboxtitle).css('display') == 'none') {
